[project]
name = "binance-alpha-oto"
version = "0.1.0"
description = "币安多用户Alpha代币OTO订单自动交易系统"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Web框架
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    # 数据库和ORM
    "sqlalchemy[asyncio]>=2.0.0",
    "aiosqlite>=0.19.0",
    "alembic>=1.12.0",
    # 数据验证和配置
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    # Redis缓存
    "redis>=5.0.0",
    # HTTP客户端
    "httpx>=0.25.0",
    # WebSocket
    "websockets>=12.0",
    # 加密
    "cryptography>=41.0.0",
    # 日志
    "structlog>=23.2.0",
    # 环境变量
    "python-dotenv>=1.0.0",
    # CLI工具
    "typer>=0.9.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    # 测试工具
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    # 代码质量
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.5.0",
    # 类型检查桩
    "types-redis>=4.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/binance"]

# Ruff 配置 - 替代 Black, isort, flake8
[tool.ruff]
# 目标 Python 版本
target-version = "py311"
# 行长度限制
line-length = 88
# 排除的目录和文件
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# 启用的规则集
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "Q",   # flake8-quotes
    "RUF", # Ruff-specific rules
]

# 忽略的规则
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise ... from err (API 路由中的异常处理)
    "C901",  # too complex
    "E203",  # whitespace before ':'
    "RUF001",  # 中文字符串中的全角标点符号
    "RUF002",  # 中文文档字符串中的全角标点符号
    "RUF003",  # 中文注释中的全角标点符号
    "RUF006",  # asyncio.create_task 返回值存储
    "ARG001",  # 未使用的函数参数（API 路由预留参数）
    "ARG002",  # 未使用的方法参数（未实现功能的预留参数）
    "SIM102",  # 嵌套 if 语句可以合并
    "SIM105",  # 使用 contextlib.suppress 替代 try-except-pass（保持注释清晰）
    "B007",  # 循环控制变量未使用
    "F821",  # 未定义的名称（未实现的类型）
]

# 每个文件的忽略规则
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/**/*.py" = ["S101"]  # use of assert

# 导入排序配置
[tool.ruff.lint.isort]
known-first-party = ["binance"]
force-single-line = false
lines-after-imports = 2

# 代码格式化配置
[tool.ruff.format]
# 使用双引号
quote-style = "double"
# 缩进样式
indent-style = "space"
# 跳过魔法尾随逗号
skip-magic-trailing-comma = false
# 行结束符
line-ending = "auto"

# Ruff 已完全替代 Black 和 isort，无需保留传统配置

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[dependency-groups]
dev = [
    "pytest",
    "pytest-asyncio",
    "ruff>=0.12.11",
]